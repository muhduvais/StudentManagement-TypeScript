<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Admin Home</title>
<!-- bootstrap -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round|Open+Sans">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="/static/adminStyle.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>

</head>
<body>

    <style>
        .error {
            color: #c50000;
        }
    </style>

<div class="container-lg mx-auto">
    <div class="table-responsive">
        <div class="table-wrapper rounded">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-8"><h2>Student <b>Details</b></h2></div>
                    <div class="col-sm-4">
                        <button type="button" class="btn btn-info add-new" data-toggle="modal" data-target="#addUserModal"><i class="fa fa-plus"></i> Add New</button>
                        <div class="search-box me-2">
                            <i class="material-icons">&#xE8B6;</i>
                            <input type="text" id="searchInput" class="form-control" placeholder="Search&hellip;">
                        </div>
                    </div>
                </div>
            </div>
            <table class="table rounded">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Age</th>
                        <th>Place</th>
                        <th>Phone</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    <% usersList.forEach(user => { %>
                    <tr>
                        <td><%= user.name %></td>
                        <td><%= user.age %></td>
                        <td><%= user.place %></td>
                        <td><%= user.phone %></td>
                        <td><%= user.email %></td>
                        <td>
                            <a class="add" title="Add" data-toggle="modal"><i class="material-icons">&#xE03B;</i></a>
                            <a class="edit" title="Edit" data-toggle="modal" data-target="#editUserModal<%= user._id %>"><i class="material-icons">&#xE254;</i></a>
                            <a class="delete" title="Delete" data-toggle="modal" data-target="#deleteUserModal<%= user._id %>"><i class="material-icons">&#xE872;</i></a>
                        </td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
    <a href="/adminLogout" class="btn btn-info pb-0" type="button"><h5>Logout</h5></a>
</div>

<!-- Add Modal HTML -->
<div id="addUserModal" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="addUserForm">
                <div class="modal-header">
                    <h4 class="modal-title">Add Student</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label id="inputLabel">Name</label>
                        <input type="text" id="name" name="name" class="form-control">
                    </div>
                    <div class="form-group">
                        <label id="inputLabel">Age</label>
                        <input type="text" id="age" name="age" class="form-control">
                    </div>
                    <div class="form-group">
                        <label id="inputLabel">Place</label>
                        <input type="text" id="place" name="place" class="form-control">
                    </div>
                    <div class="form-group">
                        <label id="inputLabel">Phone</label>
                        <input type="text" id="phone" name="phone" class="form-control">
                    </div>
                    <div class="form-group">
                        <label id="inputLabel">Email</label>
                        <input type="text" id="email" name="email" class="form-control">
                    </div>
                    <div class="form-group">
                        <label id="inputLabel">Password</label>
                        <input type="password" id="password" name="password" class="form-control">
                    </div>
                    <div class="form-group">
                        <label id="inputLabel">Confirm Password</label>
                        <input type="password" id="cPassword" name="cPassword" class="form-control">
                    </div>
                    <div class="form-group d-none">
                        <label>isAdmin</label>
                        <input type="text" id="isAdmin" name="isAdmin" class="form-control" value="0">
                    </div>
                    <div class="signupMessage text-danger"><%= locals.signupMessage? signupMessage : "" %></div>
                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                    <input type="submit" class="btn btn-success" value="Add">
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Edit Modal HTML -->
<% usersList.forEach(user => { %>
    <div id="editUserModal<%= user._id %>" class="modal fade">
        <div class="modal-dialog modal-box-shadow">
            <div class="modal-content">
                <form class="editUser<%= user._id %>" data-user-id="<%= user._id %>">
                    <div class="modal-header">
                        <h4 class="modal-title">Edit Student</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Name</label>
                            <input type="text" name="editName" id="editName" class="form-control" value="<%= user.name %>" required>
                        </div>
                        <div class="form-group">
                            <label>Age</label>
                            <input type="number" name="editAge" id="editAge" class="form-control" value="<%= user.age %>" required>
                        </div>
                        <div class="form-group">
                            <label>Place</label>
                            <input type="text" name="editPlace" id="editPlace" class="form-control" value="<%= user.place %>" required>
                        </div>
                        <div class="form-group">
                            <label>Phone</label>
                            <input type="text" name="editPhone" id="editPhone" class="form-control" value="<%= user.phone %>" required>
                        </div>
                        <div class="form-group">
                            <label>Email</label>
                            <input type="text" name="editEmail" id="editEmail" class="form-control" value="<%= user.email %>" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                        <input type="submit" class="btn btn-info" value="Save">
                    </div>
                </form>
            </div>
        </div>
    </div>
    <% }) %>


<!-- Delete Modal HTML -->
<% usersList.forEach(user => { %>
<div id="deleteUserModal<%= user._id %>" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/deleteUser/<%= user._id %>" method="POST">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Student</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this user?</p>
                    <p class="text-muted"><small>This action cannot be undone.</small></p>
                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                    <input type="submit" class="btn btn-danger" value="Delete">
                </div>
            </form>
        </div>
    </div>
</div>
<% }) %>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    //Search Function
    $(document).ready(function(){
        $("#searchInput").on("keyup", function() {
            var value = $(this).val().toLowerCase();

            $("table tbody tr").filter(function() {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>

<script>

     // Edit function
     let editForms = document.querySelectorAll('form[class^="editUser"]');
    editForms.forEach(editForm => {
        editForm.addEventListener('submit', e => {
            e.preventDefault();
            let editUserId = editForm.getAttribute('data-user-id');
            validateEditForm(editUserId, editForm);
        });
    });

    function setSuccess(element, message) {
        let parentElement = element.parentElement;
        let label = parentElement.querySelector('label');
        label.innerText = message;
        label.classList.add('success');
        label.classList.remove('error');
    }

    function setError(element, message) {
        let parentElement = element.parentElement;
        let label = parentElement.querySelector('label');
        label.innerText = message;
        label.classList.add('error');
        label.classList.remove('success');
    }

    async function validateEditForm(userId, formElement) {
        let editName = formElement.querySelector('input[name="editName"]');
        let editAge = formElement.querySelector('input[name="editAge"]');
        let editPlace = formElement.querySelector('input[name="editPlace"]');
        let editPhone = formElement.querySelector('input[name="editPhone"]');
        let editEmail = formElement.querySelector('input[name="editEmail"]');

        let nameValue = editName.value.trim();
        let ageValue = editAge.value.trim();
        let placeValue = editPlace.value.trim();
        let phoneValue = editPhone.value.trim();
        let emailValue = editEmail.value.trim();

        const isValidEmail = email => {
            const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }

        let isValid = true;

        if (!nameValue) {
            setError(editName, "Please enter your name!");
            isValid = false;
        } else {
            setSuccess(editName, 'Name');
        }

        if (!ageValue) {
            setError(editAge, "Please enter your age!");
            isValid = false;
        } else if (isNaN(ageValue)) {
            setError(editAge, "Enter a valid age!");
            isValid = false;
        } else if (ageValue < 18 || ageValue > 100) {
            setError(editAge, "Age must be between 18 - 100!");
            isValid = false;
        } else {
            setSuccess(editAge, 'Age');
        }

        if (!placeValue) {
            setError(editPlace, "Please enter your place!");
            isValid = false;
        } else {
            setSuccess(editPlace, 'Place');
        }

        if (!phoneValue) {
            setError(editPhone, "Please enter your phone!");
            isValid = false;
        } else if (!/^\d{10}$/.test(phoneValue)) {
            setError(editPhone, "Enter a valid phone number!");
            isValid = false;
        } else {
            setSuccess(editPhone, 'Phone');
        }

        if (!emailValue) {
            setError(editEmail, "Please enter your email!");
            isValid = false;
        } else if (!isValidEmail(emailValue)) {
            setError(editEmail, "Enter a valid email!");
            isValid = false;
        } else {
            setSuccess(editEmail, 'Email');
        }

        console.log("isValid: ", isValid);

        if (!isValid) return;

        let response = await fetch(`/editUser/${userId}`, {
            method: 'PATCH',
            headers: {
                'content-type': 'application/json',
            },
            body: JSON.stringify({
                name: nameValue,
                age: ageValue,
                place: placeValue,
                phone: phoneValue,
                email: emailValue
            })
        });

        let data = await response.json();

        if (data.success) {
            alert("Student updated!");
            location.reload();
        } else {
            alert(data.message);
        }
    }


    // add student validation
    let form = document.getElementById('addUserForm');
    form.addEventListener('submit', e => {
        e.preventDefault();

        validateForm();
    });

    async function validateForm() {

        let name = document.getElementById('name');
        let age = document.getElementById('age');
        let place = document.getElementById('place');
        let phone = document.getElementById('phone');
        let email = document.getElementById('email');
        let password = document.getElementById('password');
        let cPassword = document.getElementById('cPassword');

        let nameValue = name.value.trim();
        let ageValue = age.value.trim();
        let placeValue = place.value.trim();
        let phoneValue = phone.value.trim();
        let emailValue = email.value.trim();
        let passwordValue = password.value.trim();
        let cPasswordValue = cPassword.value.trim();

        const isValidEmail = email => {
            const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }

        let isValid = true;

        if (!nameValue) {
            setError(name, "Please enter your name!");
            isValid = false;
        } else {
            setSuccess(name, 'Name');
        }

        if (!ageValue) {
            setError(age, "Please enter your age!");
            isValid = false;
        } else if (isNaN(ageValue)) {
            setError(age, "Enter a valid age!");
            isValid = false;
        } else if (ageValue < 18 || ageValue > 100) {
            setError(age, "Age must be between 18 - 100!");
            isValid = false;
        } else {
            setSuccess(age, 'Age');
        }

        if (!placeValue) {
            setError(place, "Please enter your place!");
            isValid = false;
        } else {
            setSuccess(place, 'Place');
        }

        if (!phoneValue) {
            setError(phone, "Please enter your phone!");
            isValid = false;
        } else if (!/^\d{10}$/.test(phoneValue)) {
            setError(phone, "Enter a valid phone number!");
            isValid = false;
        } else {
            setSuccess(phone, 'Phone');
        }

        if (!emailValue) {
            setError(email, "Please enter your email!");
            isValid = false;
        } else if (!isValidEmail(emailValue)) {
            setError(email, "Enter a valid email!");
            isValid = false;
        } else {
            setSuccess(email, 'Email');
        }

        if (!passwordValue) {
            setError(password, "Please enter the password!");
            isValid = false;
        } else {
            setSuccess(password, 'Password');
        }

        if (!cPasswordValue) {
            setError(cPassword, "Please confirm password!");
            isValid = false;
        } else if (cPasswordValue !== passwordValue) {
            setError(cPassword, "passwords do not match!");
            isValid = false;
        } else {
            setSuccess(cPassword, 'Confirm Password');
        }
        
        console.log("isValid: ", isValid);
        
        if (!isValid) return;

        let response = await fetch('/addUser', {
            method : 'POST',
            headers : {
                'content-type' : 'application/json',
            },
            body: JSON.stringify({
                name: nameValue,
                age: ageValue,
                place: placeValue,
                phone: phoneValue,
                email: emailValue,
                password: passwordValue,
                cPassword: cPasswordValue
            })
        });

        let data = await response.json();

        if (data.success) {
            alert(data.message);
            location.reload();
        } else {
            document.querySelector('.signupMessage').innerText = data.message;
        }
        

    }
</script>
</body>
</html>